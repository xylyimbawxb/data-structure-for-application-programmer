import java.util.PriorityQueue;

public class hw6Test {
    public class HuffmanTree implements Comparable<HuffmanTree> {
        public int frequency;
        public HuffmanTree(int freq) {
            frequency = freq;
        }
        @Override
        public int compareTo(HuffmanTree t) {
            return frequency - t.frequency;
        }
    }
    public class HuffmanNode extends HuffmanTree {
        public HuffmanTree left, right;
        public HuffmanNode (HuffmanTree l, HuffmanTree r) {
            super (l.frequency + r.frequency);
            left = l;
            right = r;
        }
    }
    public class HuffmanLeaf extends HuffmanTree {
        public char value;
        public HuffmanLeaf(int freq, char c) {
            super(freq);
            value = c;
        }
    }
    public class HuffmanCode {
        public static HuffmanTree buildTree(int[] charFreqs) {
            PriorityQueue<HuffmanTree> trees = new PriorityQueue<HuffmanTree>();
            
        }
    }

    public static void main(String[] args) {
        String input = "SUSIE SAYS IT IS EASY\n";
        char[] inputChar = input.toCharArray();
        System.out.println("There are " + inputChar.length + "characters.");
        int[] charFreq = new int[256];
        for (char c:inputChar) {
            charFreq[c]++;
        }
        for (char c:inputChar) {
            System.out.print(c + " ");
        }
        System.out.println("Just to see if there is any linefeed character." + inputChar[inputChar.length - 1] + "haha");
    }
}
